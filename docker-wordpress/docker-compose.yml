services:
  mysql:
    image: 'mariadb:lts'
    ports:
      - '${WP_ENV_MYSQL_PORT:-}:3306'
    environment:
      MYSQL_ROOT_HOST: '%'
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: wordpress
    volumes:
      - 'mysql:/var/lib/mysql'
      - './initdb.d:/docker-entrypoint-initdb.d'
  wordpress:
    depends_on:
      - mysql
    build:
      context: .
      dockerfile: WordPress.Dockerfile
      args: &ref_0
        HOST_USERNAME: Alexander
        HOST_UID: '1000'
        HOST_GID: '1000'
    ports:
      - '${WP_ENV_PORT:-8888}:80'
    environment:
      APACHE_RUN_USER: '#1000'
      APACHE_RUN_GROUP: '#1000'
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_NAME: wordpress
      WP_TESTS_DIR: /wordpress-phpunit
      
    volumes: &ref_1
      - .\WordPress:/var/www/html
      - .\WordPress-PHPUnit\tests\phpunit:/wordpress-phpunit
      - 'user-home:/home/Alexander'
      - ./WordPress/wp-content/themes:/var/www/html/wp-content/themes
      - ./WordPress/wp-content/plugins:/var/www/html/wp-content/plugins
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  cli:
    depends_on:
      - wordpress
    build:
      context: .
      dockerfile: CLI.Dockerfile
      args: *ref_0
    volumes: *ref_1
    user: '1000:1000'
    environment:
      WORDPRESS_DB_USER: root
      WORDPRESS_DB_PASSWORD: password
      WORDPRESS_DB_NAME: wordpress
      WP_TESTS_DIR: /wordpress-phpunit
    extra_hosts:
      - 'host.docker.internal:host-gateway'
  phpmyadmin:
    image: phpmyadmin
    ports:
      - '${WP_ENV_PHPMYADMIN_PORT:-}:80'
    environment:
      PMA_PORT: 3306
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: password
volumes:
  mysql: {}
  user-home: {}
